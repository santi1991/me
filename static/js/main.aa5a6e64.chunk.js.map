{"version":3,"sources":["logo.svg","utilities/commons/Styles.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","typography","h2","fontSize","palette","primary","main","orange","secondary","green","useStyles","makeStyles","root","background","border","borderRadius","marginBottom","color","padding","ButtonStyled","classes","Button","className","CheckBoxComponent","useState","checked","setChecked","FormControlLabel","control","Checkbox","onChange","event","target","inputProps","label","App","ThemeProvider","Container","fixed","AppBar","Toolbar","IconButton","Typography","variant","Grid","container","spacing","justify","item","xs","sm","Paper","style","height","width","ButtonGroup","startIcon","onClick","alert","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,MAA0B,iC,8CCG5BA,EAAQC,YAAe,CAChCC,WAAY,CACRC,GAAI,CACAC,SAAU,KAGlBC,QAAS,CACLC,QAAS,CACLC,KAAMC,IAAO,MAEjBC,UAAW,CACPF,KAAMG,IAAM,SAKXC,EAAYC,YAAW,CAChCC,KAAM,CACFC,WAAY,qCACZC,OAAQ,EACRC,aAAc,GACdC,aAAc,GACdC,MAAO,QACPC,QAAS,c,8JCFXC,EAAe,WACnB,IAAMC,EAAUV,IAChB,OACE,cAACW,EAAA,EAAD,CAAQC,UAAWF,EAAQR,KAA3B,yBAIEW,EAAoB,WACxB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OACE,8BACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEJ,QAASA,EACTK,SAVW,SAACC,GACpBL,EAAWK,EAAMC,OAAOP,UAUhBR,MAAM,UACNgB,WAAY,CAAE,aAAc,sBAGhCC,MAAM,wBAmFCC,MA5Ef,WACE,OACE,cAACC,EAAA,EAAD,CAAerC,MAAOA,EAAtB,SACE,cAACsC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,qBAAKhB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,cAACiB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAGA,cAACtB,EAAA,EAAD,yBAOJ,cAACqB,EAAA,EAAD,CAAYC,QAAQ,KAApB,+BAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,YAApB,gCAGA,cAAC,EAAD,IAEA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAApC,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAOC,MAAO,CAACC,OAAQ,GAAIC,MAAM,YAEnC,cAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAOC,MAAO,CAACC,OAAQ,GAAIC,MAAM,YAEnC,cAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAOC,MAAO,CAACC,OAAQ,GAAIC,MAAM,eAMrC,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,WACE,cAAClC,EAAA,EAAD,CACEmC,UAAW,cAAC,IAAD,IAGXb,QAAQ,YACR1B,MAAM,UACNwC,QAAS,kBAAMC,MAAM,SANvB,kBAUA,cAACrC,EAAA,EAAD,CACEmC,UAAW,cAAC,IAAD,IACXb,QAAQ,YACR1B,MAAM,YACNwC,QAAS,kBAAMC,MAAM,SAJvB,wBAWF,qBAAKC,IAAKC,EAAMtC,UAAU,WAAWuC,IAAI,mBC/GtCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa5a6e64.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { orange, green } from '@material-ui/core/colors';\r\n\r\nexport const theme = createMuiTheme({\r\n    typography: {\r\n        h2: {\r\n            fontSize: 22\r\n        }\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: orange[400],\r\n        },\r\n        secondary: {\r\n            main: green[400],\r\n        }\r\n    }\r\n});\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #333, #999)',\r\n        border: 0,\r\n        borderRadius: 15,\r\n        marginBottom: 15,\r\n        color: 'white',\r\n        padding: '5px 30px'\r\n    }\r\n});","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport '@fontsource/roboto';\n\nimport { theme, useStyles } from './utilities/commons/Styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\n\n// import Container from '@material-ui/core/Container';\n// import Grid from '@material-ui/core/Grid';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport { Grid, Container, Typography, Paper, Checkbox, FormControlLabel, Button, ButtonGroup } from '@material-ui/core';\n\n// import { SaveIcon, DeleteIcon, MenuIcon  } from '@material-ui/icons';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst ButtonStyled = () => {\n  const classes = useStyles();\n  return (\n    <Button className={classes.root}>Hola Mundo</Button>\n  )\n}\n\nconst CheckBoxComponent = () => {\n  const [checked, setChecked] = useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={handleChange}\n            color='primary'\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n        }\n        label='Testing checkbox'\n      />\n\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container fixed>\n        <div className=\"App\">\n          <header className=\"App-header\">\n\n            <AppBar>\n              <Toolbar>\n                <IconButton>\n                  <MenuIcon/>\n                </IconButton>\n                <Typography variant='h6'>\n                  Hola a Todos\n                </Typography>\n                <Button>\n                  Login\n                </Button>\n\n              </Toolbar>\n            </AppBar>\n\n            <Typography variant='h2'>\n              Welcome to my App\n            </Typography>\n            <Typography variant='subtitle1'>\n              Learn about myself\n            </Typography>\n            <ButtonStyled />\n\n            <Grid container spacing={3} justify='center'>\n              <Grid item xs={3} sm={4}>\n                <Paper style={{height: 75, width:'100%'}} />\n              </Grid>\n              <Grid item xs={3} sm={4}>\n                <Paper style={{height: 75, width:'100%'}} />\n              </Grid>\n              <Grid item xs={3} sm={4}>\n                <Paper style={{height: 75, width:'100%'}} />\n              </Grid>\n\n            </Grid>\n            \n\n            <CheckBoxComponent />\n            <ButtonGroup>\n              <Button\n                startIcon={<SaveIcon />}\n                //endIcon={<AddToPhotosIcon/>}\n                //size='large'\n                variant=\"contained\"\n                color='primary'\n                onClick={() => alert('hola')}\n              >\n                Save\n          </Button>\n              <Button\n                startIcon={<DeleteIcon />}\n                variant=\"contained\"\n                color='secondary'\n                onClick={() => alert('hola')}\n              >\n                Discard\n          </Button>\n            </ButtonGroup>\n\n\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n          </header>\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}